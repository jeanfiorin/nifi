apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
spec:
  serviceName: nifi-headless
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: nifi-custom
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        - containerPort: 8082
        - containerPort: 8443
        env:
        - name: POD_DEBUG
          value: "true"
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: "admin"
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: "admin123admin123"
        - name: NIFI_WEB_PROXY_HOST
          value: "10.101.142.163:32443"
        - name: NIFI_ZK_CONNECT_STRING
          value: "zookeeper.default.svc.cluster.local:2181"
        - name: NIFI_REGISTRY_URL
          value: "http://nifi-registry-service:18080/nifi-registry-api"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: state-volume
          mountPath: /opt/nifi/nifi-current/state
        - name: conf-custom-volume
          mountPath: /opt/nifi/nifi-current/conf-custom  # monta a pasta inteira
          readOnly: true
        - name: provenance-repository # útil para auditoria/histórico
          mountPath: /opt/nifi/nifi-current/provenance_repository
        #- name: content-repository #  Pode ser reconstruído
        #  mountPath: /opt/nifi/nifi-current/content_repository
        #- name: flowfile-repository  # Em cluster efêmero, pode ser volátil
        #  mountPath: /opt/nifi/nifi-current/flowfile_repository
        #- name: database-repository # Se estiver usando Registry e cluster, não é necessário persistência
        #  mountPath: /opt/nifi/nifi-current/database_repository
        - name: ca-volume
          mountPath: /etc/tls
          readOnly: true
      volumes:
      - name: state-volume
        persistentVolumeClaim:
          claimName: nifi-state-pvc
      - name: conf-custom-volume
        configMap:
          name: nifi-conf-custom
      - name: ca-volume
        secret:
          secretName: nifi-ca-secret


  volumeClaimTemplates:
  - metadata:
      name: content-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: flowfile-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: provenance-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: database-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: nifi
spec:
  selector:
    app: nifi
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
      nodePort: 32443  # Port do Minikube para acesso externo
  type: NodePort
